;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;; Author: Erwin Mueller
;;; Version: material-vegetation.plm,v 1.0

;;; Using Modules

(defmodule "DWARFHUSTLE-OBJECTS-VEGETATION"
  :documentation "Grasses, shrubs, trees."
  :includes ("PL-USER")
  :uses ("LOGIC" "STELLA" "DWARFHUSTLE-GAME-MAP" "DWARFHUSTLE-GAME-MAP-OBJECTS" "DWARFHUSTLE-MATERIALS")
  )

(in-module "DWARFHUSTLE-OBJECTS-VEGETATION")

;; clear any info from previous runs:
(clear-module "DWARFHUSTLE-OBJECTS-VEGETATION")
(reset-features)

(defconcept Vegetation (?type ObjectType))
  :documentation "Grasses, shrubs, trees."

(defrelation growing-climate ((?v Vegetation) (?c Climate-Zone)))
  :documentation "Climate zone where the plant grows."

(defrelation growing-season ((?v Vegetation) (?season Season)))
  :documentation "Season(s) of the growing time."

(deffunction growing-speed ((?v Vegetation)) :-> (?time NUMBER))
  :documentation "Growing speed in units/day giving best conditions."

(deffunction growing-min-temp ((?v Vegetation)) :-> (?temp NUMBER))
  :documentation "Minimum temperature for the plant, below the plant will die."

(deffunction growing-max-temp ((?v Vegetation)) :-> (?temp NUMBER))
  :documentation "Maximum temperature for the plant, above the plant will die."

(deffunction growing-opt-temp ((?v Vegetation)) :-> (?temp NUMBER))
  :documentation "Optimal temperature for the plant, above or below the plant will receive growth penalties."

(deffunction growing-max-size ((?v Vegetation)) :-> (?s NUMBER))
  :documentation "The maximum size of the vegetation in blocks."

(deffunction root-max-size ((?v Vegetation)) :-> (?s NUMBER))
  :documentation "The maximum size of roots in blocks."

(deffunction width-max ((?v Vegetation)) :-> (?s NUMBER))
  :documentation "The maximum width of the vegetation in blocks."

(deffunction height-max ((?v Vegetation)) :-> (?s NUMBER))
  :documentation "The maximum height of the vegetation in blocks."

(deffunction depth-max ((?v Vegetation)) :-> (?s NUMBER))
  :documentation "The maximum depth of the vegetation in blocks."

(defrelation growing-soil ((?v Vegetation) (?m Material)))
  :documentation "Defines where the plant can grow."

(defrelation flowering-months ((?v Vegetation) (?month Month)))
  :documentation "Month(s) of the flowering period."

(defrelation grows-into ((?v Vegetation) (?c Vegetation)))
  :documentation "The name of the tree that his sampling grows into."

(defconcept Grass (?v Vegetation))
  :documentation "Cereal grasses, bamboos, the grasses of natural grassland and species cultivated in lawns and pasture."

(defconcept Shrub (?v Vegetation))
  :documentation "Small to medium sized plants."

(defconcept Tree (?v Vegetation))
  :documentation "Plant with an elongated stem, or trunk, usually supporting branches and leaves."
(assert (= (object-have-model Tree) FALSE))
(assert (= (object-have-texture Tree) FALSE))
(assert (= (object-is-visible Tree) FALSE))
(assert (= (object-can-select Tree) FALSE))

(defconcept Tree-Sapling (?t Vegetation))
  :documentation "Tree sapling."
(assert (= (object-have-model Tree-Sapling) FALSE))
(assert (= (object-have-texture Tree-Sapling) TRUE))
(assert (= (object-is-visible Tree-Sapling) TRUE))
(assert (= (object-can-select Tree-Sapling) TRUE))

(defconcept Tree-Root (?t Vegetation))
  :documentation "Root of the tree."
(assert (= (object-have-model Tree-Root) TRUE))
(assert (= (object-have-texture Tree-Root) FALSE))
(assert (= (object-is-visible Tree-Root) TRUE))
(assert (= (object-can-select Tree-Root) TRUE))

(defconcept Tree-Trunk (?t Vegetation))
  :documentation "Trunk of the tree."
(assert (= (object-have-model Tree-Trunk) TRUE))
(assert (= (object-have-texture Tree-Trunk) FALSE))
(assert (= (object-is-visible Tree-Trunk) TRUE))
(assert (= (object-can-select Tree-Trunk) TRUE))

(defconcept Tree-Branch (?t Vegetation))
  :documentation "Branch of the tree."
(assert (= (object-have-model Tree-Branch) TRUE))
(assert (= (object-have-texture Tree-Branch) FALSE))
(assert (= (object-is-visible Tree-Branch) TRUE))
(assert (= (object-can-select Tree-Branch) TRUE))

(defconcept Tree-Twig (?t Vegetation))
  :documentation "Twig of the tree."
(assert (= (object-have-model Tree-Twig) TRUE))
(assert (= (object-have-texture Tree-Twig) FALSE))
(assert (= (object-is-visible Tree-Twig) TRUE))
(assert (= (object-can-select Tree-Twig) TRUE))

(defconcept Tree-Leaf (?t Vegetation))
  :documentation "Leaves of the tree."
(assert (= (object-have-model Tree-Leaf) TRUE))
(assert (= (object-have-texture Tree-Leaf) FALSE))
(assert (= (object-is-visible Tree-Leaf) TRUE))
(assert (= (object-can-select Tree-Leaf) TRUE))
